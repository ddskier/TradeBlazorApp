@page "/login"
@using TradeBlazorApp.Business_Classes <!--Added Manually this and below 2 lines, eventually through Interaction 48 and others -->
@rendermode InteractiveServer
@inject IAccountService AccountService
@inject NavigationManager NavigationManager

<PageTitle>Login</PageTitle>

<!--This entire page was first generated by CHatGTP by migrating the Login form from VB.NET Win Forms, then manually fixed up below where noted-->


<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <!--Formatting Aplpied Per Phase 7, with help from ChatGTP Interaction 70, 71, 72-->
    <table>
        <tr>
            <td>
                <label class="white-label" for="userId">User ID:</label>
            </td>
            <td>
                <InputText class="custom-input" id="userId" @bind-Value="loginModel.UserId" />
            </td>
        </tr>
        <tr>
            <td>
                <label class="white-label" for="password">Password:</label>
            </td>
            <td>
                <InputText class="custom-input" id="password" @bind-Value="loginModel.Password" type="password" />
            </td>
        </tr>
    </table>
    <button class="std-button" type="submit">Log In</button>
</EditForm>

<label class="green-label">@successText</label>
<label class="red-label">@failText</label>

@code {
    private LoginModel loginModel = new LoginModel();
    private string successText;
    private string failText;

    private async Task HandleLogin()
    {
        try
        {
            var result = await AccountService.LoginAsync(loginModel.UserId, loginModel.Password);  //Fixup Needed:  Changed this call via Interaction 47 with ChatGTP

            if (result == null)  //Changing this generated code to use labelText for messages
            {
                //loginMessage = $"Login Failed for {loginModel.UserId}. Try Again";   Commented out manually
                failText = $"Login Failed for {loginModel.UserId}. Try Again";
            }
            else  //Changed this logic manually from ChatGTP generated code for Login
            {

                if (GlobalSettings.LoggedIn)
                {
                    GlobalSettings.theLoginAccount = result;
                    successText = $"Login Success for {loginModel.UserId}. AccountID is {result.AccountId}"; //fixup from CHatGTP Interaction 50, where I am spending significant redos from realier generated code.  But makes sense, re factoring and Entity Framework best practices
                                                                                                             // Navigate to another page or update global settings as needed
                    NavigationManager.NavigateTo("/");
                }
                else
                {
                    failText = $"Login Failed for {loginModel.UserId}. Try Again";
                }
            }
        }
        catch (Exception e)
        {
            failText = e.ToString();
        }

    }

    public class LoginModel
    {
        public string UserId { get; set; }
        public string Password { get; set; }
    }
}

