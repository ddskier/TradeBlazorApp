@page "/quotes"
@using TradeBlazorApp.Business_Classes
@using TradeBlazorApp.Data_Classes
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer  
@inject NavigationManager NavigationManager
@inject QUOTEDBEntities context  //Added per ChatGPT Interaction 53
<PageTitle>Trade Quotes</PageTitle>

<h3 style="color: white; font-size: 30px;">Quotes</h3>

<button class="std-button" @onclick="GoMainNav">Return to Main Menu</button>
<br />
<!-- I added a new Style class red-label for Warning/Error Labels, per ChatGPT interaction 60 -->
<label class="red-label">@labelText</label>
<br />
<br />

@if (quotes != null)
{
    <table class="custom-table">  <!--Note all classes for styles were generated in ChatGPT Interactions 71+, in formatting phase and applied-->
        <thead>
            <tr>
                <th>Symbol</th>
                <th>Company Name</th>
                <th>Price</th>
                <th>Open</th>
                <th>Volume</th>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var quote in quotes)
            {
                <tr @onclick="@(() => BuyStock(quote))">
                    <td>@quote.Symbol</td>
                    <td>@quote.CompanyName</td>
                    <td>@quote.Price.ToString()</td>
                    <td>@quote.Open1.ToString()</td>
                    <td>@quote.Volume.ToString()</td>
                   
                </tr>
            }
        </tbody>
    </table>
}

<button class="std-button" @onclick="LoadQuotes">Load Quotes</button>


@code {
    private string labelText;
    private List<Quote> quotes;  // This line modified from ChatGPT codegen, simply to replace <QUOTE> with <Quote>
                                 //The rest of this generated by ChatGPT Interaction 52

    /* protected override async Task OnInitializedAsync()     NOTE I REMOVED this method, moving logic to LoadQuotes, per ChatGPT interaction 56
               {
               {
               quotes = await context.Quotes.ToListAsync();
          }
          }

          void LoadQuotes()
          {
          // Your logic to load quotes

    }

    */

    // New LoadQuotes per ChatGPT Interaction 56

    private async Task LoadQuotes()  //Method generated no changes from ChatGPT Interaction 56
    {
        quotes = await context.Quotes.ToListAsync();
        StateHasChanged(); // This may be necessary to inform Blazor that the component's state has changed and it needs to re-render.
    }

    void GoMainNav()
    {
        NavigationManager.NavigateTo($"/");
    }
    void BuyStock(Quote quote)  //I manually Fixed case from QUOTE to Quote
    {
        // Your logic to handle stock purchase
        if (GlobalSettings.LoggedIn)
        {
            //I added to goto Buy Razor page. Per ChatGPT Interaction 65 and 66
            GlobalSettings.theCurrentQuote = quote;  
            NavigationManager.NavigateTo($"/buy/");
        }
        else
        {
            labelText = "You Must Login First, to Buy or Sell Stock";

            // NavigationManager.NavigateTo("/quotes/{quote}");
            // NavManager.NavigateTo($"/detailpage/{value}")
           // NavigationManager.NavigateTo($"/buy/{quote}");  
        }

    }
}

