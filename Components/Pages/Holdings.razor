@page "/holdings"
@using TradeBlazorApp.Business_Classes
@using TradeBlazorApp.Data_Classes
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject QUOTEDBEntities quoteContext
@inject ACCOUNTDBEntities accountContext
@inject IStockService StockService

<!-- I added a new Style class red-label for Warning/Error Labels, per ChatGTP interaction 60 -->
<label class="red-label">@labelText</label>
<br />

    <!--This code generated by ChatGTP 4 via Interaction 68, manual fixup per line as noted below in comments-->
    @if (holdings == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
    <table class="custom-table">
            <thead>
                <tr>
                    <th>Symbol</th>
                    <th>Quantity</th>
                    <th>Purchase Price</th>
                    <th>Purchase Date</th>
                    <th>UserID</th>
                    <th>AccountID</th>
                    <th>HoldingID</th>
                    <!-- Add other columns as needed -->
                </tr>
            </thead>
            <tbody>
                @foreach (var holding in holdings)
                {
                    <tr @onclick="@(() => SellStock(holding))">
                        <td>@holding.QuoteSymbol</td>
                        <td>@holding.Quantity</td>
                        <td>@holding.PurchasePrice</td>
                        <td>@holding.PurchaseDate</td>
                        <td>@holding.UserId</td>
                        <td>@holding.AccountAccountId</td>
                        <td>@holding.HoldingId</td>


                        <!-- Add other cells as needed -->
                    </tr>
                }
            </tbody>
        </table>
    }




@code {
    public List<Holding> holdings;   //Manual fixup from generated code from Caps to not all Caps, re ChatGTP code generated in Interaction 68
    string labelText;

    protected override async Task OnInitializedAsync()
    {
        if (GlobalSettings.LoggedIn)
        {
            holdings = await accountContext.HOLDING
                         .Where(p => p.UserId == GlobalSettings.theLoginAccount.UserId)
                         .ToListAsync();
        }
        else
        {
            labelText = "You Must Login First!";
        }
    }

    void SellStock(Holding holding)
    {
        // Your logic to handle stock purchase
        if (GlobalSettings.LoggedIn)
        {
            
            //I added to goto Sell Razor page. Per ChatGTP Interaction 65 and 66
            GlobalSettings.theCurrentHolding = holding;
            NavigationManager.NavigateTo($"/sellform");
        }
        else
        {
            labelText = "You Must Login First, to Buy or Sell Stock";

            // NavigationManager.NavigateTo("/quotes/{quote}");   //These were my attempts, on own (not generated by ChatGTP), to pass complex object from one page to another.
            // Eventually, I went back to ChatGTP, and was told:  don't even try to do this (tho should have worked): its a BAD PRACTICE.  So adjusted to using my GlobalSettings Biz Class instead.
            // NavManager.NavigateTo($"/detailpage/{value}")
            // NavigationManager.NavigateTo($"/buy/{quote}");
        }
    }

    

}
